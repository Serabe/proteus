syntax = "proto3";
package github.com.srcd.proteus.example;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "example";

message Category {
	option (gogoproto.typedecl) = false;
	int64 id = 1 [(gogoproto.customname) = "ID"];
	google.protobuf.Timestamp created_at = 2 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
	google.protobuf.Timestamp updated_at = 3 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
	google.protobuf.Timestamp deleted_at = 4 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
	string name = 5;
	string color = 6 [(gogoproto.casttype) = "Color"];
	github.com.srcd.proteus.example.CategoryOptions options = 7 [(gogoproto.nullable) = false];
}

message CategoryOptions {
	option (gogoproto.typedecl) = false;
	bool show_prices = 1;
	bool can_buy = 2;
}

message Product {
	option (gogoproto.typedecl) = false;
	int64 id = 1 [(gogoproto.customname) = "ID"];
	google.protobuf.Timestamp created_at = 2 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
	google.protobuf.Timestamp updated_at = 3 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
	google.protobuf.Timestamp deleted_at = 4 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
	string name = 5;
	double price = 6;
	int64 category_id = 7 [(gogoproto.customname) = "CategoryID"];
}

enum Type {
	option (gogoproto.enumdecl) = false;
	PUBLIC = 0;
	PRIVATE = 1;
	CUSTOM = 2;
}

